;; CountUp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null

(module 

  (func $Program_countUp
    (param $outOffset i32) (param $count i32) (local $i i32) 

    (block 

      ;; for (var (@<var System.Int32 i> = 0); ...)
      (setlocal $i (const.i32 0))

      (label $loop_0 
        (loop 
          ;; for (...; (@<var System.Int32 i> < @<parameter System.Int32 count>); ...)

          (if 
            (lts.i32 
              (getlocal $i)
              (getlocal $count)
            )
            (nop)
            (break $loop_0)
          )

          ;; for (...) { 
          (stores.1.i32 
            (mul.i32 
              (add.i32 
                (getlocal $outOffset)
                (getlocal $i)
              )
              (const.i32 4)
            )
            (getlocal $i)
          )

          ;; for (...; ...; <!>)
          (setlocal $i (add.i32 
              (getlocal $i)
              (const.i32 1)
            ))
        )
      )
    )
  )

  (func $Program_readI32
    (param $base i32) (param $offset i32) 
    (result i32)

    (return (loads.1.i32 (mul.i32 
          (add.i32 
            (getlocal $base)
            (getlocal $offset)
          )
          (const.i32 4)
        ) ))
  )

  (export "countUp" $Program_countUp)
  (export "readI32" $Program_readI32)

  (memory 4096 4096)

)


(invoke "countUp" (const.i32 0) (const.i32 32) )
(invoke "countUp" (const.i32 16) (const.i32 4) )
(asserteq (invoke "readI32" (const.i32 0) (const.i32 0)  ) (const.i32 0) )
(asserteq (invoke "readI32" (const.i32 0) (const.i32 2)  ) (const.i32 2) )
(asserteq (invoke "readI32" (const.i32 0) (const.i32 31)  ) (const.i32 31) )
(asserteq (invoke "readI32" (const.i32 16) (const.i32 0)  ) (const.i32 0) )
(asserteq (invoke "readI32" (const.i32 16) (const.i32 3)  ) (const.i32 3) )
