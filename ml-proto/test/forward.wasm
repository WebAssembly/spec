;; (c) 2015 Andreas Rossberg

(module
  (export "even" $even)
  (export "odd" $odd)

  (func $even (param $n i32) (result i32)
    (if (i32.eq (get_local $n) (i32.literal 0))
      (i32.literal 1)
      (call $odd (i32.sub (get_local $n) (i32.literal 1)))
    )
  )

  (func $odd (param $n i32) (result i32)
    (if (i32.eq (get_local $n) (i32.literal 0))
      (i32.literal 0)
      (call $even (i32.sub (get_local $n) (i32.literal 1)))
    )
  )
)

(assert_eq (invoke "even" (i32.literal 13)) (i32.literal 0))
(assert_eq (invoke "even" (i32.literal 20)) (i32.literal 1))
(assert_eq (invoke "odd" (i32.literal 13)) (i32.literal 1))
(assert_eq (invoke "odd" (i32.literal 20)) (i32.literal 0))
