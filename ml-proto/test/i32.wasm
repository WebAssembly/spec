(; i32 operations ;)

(module
  (func $add (param $x i32) (param $y i32) (result i32) (i32.add (get_local $x) (get_local $y)))
  (func $sub (param $x i32) (param $y i32) (result i32) (i32.sub (get_local $x) (get_local $y)))
  (func $mul (param $x i32) (param $y i32) (result i32) (i32.mul (get_local $x) (get_local $y)))
  (func $div_s (param $x i32) (param $y i32) (result i32) (i32.div_s (get_local $x) (get_local $y)))
  (func $div_u (param $x i32) (param $y i32) (result i32) (i32.div_u (get_local $x) (get_local $y)))
  (func $rem_s (param $x i32) (param $y i32) (result i32) (i32.rem_s (get_local $x) (get_local $y)))
  (func $rem_u (param $x i32) (param $y i32) (result i32) (i32.rem_u (get_local $x) (get_local $y)))
  (func $and (param $x i32) (param $y i32) (result i32) (i32.and (get_local $x) (get_local $y)))
  (func $or (param $x i32) (param $y i32) (result i32) (i32.or (get_local $x) (get_local $y)))
  (func $xor (param $x i32) (param $y i32) (result i32) (i32.xor (get_local $x) (get_local $y)))
  (func $shl (param $x i32) (param $y i32) (result i32) (i32.shl (get_local $x) (get_local $y)))
  (func $shr_s (param $x i32) (param $y i32) (result i32) (i32.shr_s (get_local $x) (get_local $y)))
  (func $shr_u (param $x i32) (param $y i32) (result i32) (i32.shr_u (get_local $x) (get_local $y)))
  (func $clz (param $x i32) (result i32) (i32.clz (get_local $x)))
  (func $ctz (param $x i32) (result i32) (i32.ctz (get_local $x)))
  (func $popcnt (param $x i32) (result i32) (i32.popcnt (get_local $x)))
  (func $eq (param $x i32) (param $y i32) (result i32) (i32.eq (get_local $x) (get_local $y)))
  (func $ne (param $x i32) (param $y i32) (result i32) (i32.ne (get_local $x) (get_local $y)))
  (func $lt_s (param $x i32) (param $y i32) (result i32) (i32.lt_s (get_local $x) (get_local $y)))
  (func $lt_u (param $x i32) (param $y i32) (result i32) (i32.lt_u (get_local $x) (get_local $y)))
  (func $le_s (param $x i32) (param $y i32) (result i32) (i32.le_s (get_local $x) (get_local $y)))
  (func $le_u (param $x i32) (param $y i32) (result i32) (i32.le_u (get_local $x) (get_local $y)))
  (func $gt_s (param $x i32) (param $y i32) (result i32) (i32.gt_s (get_local $x) (get_local $y)))
  (func $gt_u (param $x i32) (param $y i32) (result i32) (i32.gt_u (get_local $x) (get_local $y)))
  (func $ge_s (param $x i32) (param $y i32) (result i32) (i32.ge_s (get_local $x) (get_local $y)))
  (func $ge_u (param $x i32) (param $y i32) (result i32) (i32.ge_u (get_local $x) (get_local $y)))

  (export "add" $add)
  (export "sub" $sub)
  (export "mul" $mul)
  (export "div_s" $div_s)
  (export "div_u" $div_u)
  (export "rem_s" $rem_s)
  (export "rem_u" $rem_u)
  (export "and" $and)
  (export "or" $or)
  (export "xor" $xor)
  (export "shl" $shl)
  (export "shr_s" $shr_s)
  (export "shr_u" $shr_u)
  (export "clz" $clz)
  (export "ctz" $ctz)
  (export "popcnt" $popcnt)
  (export "eq" $eq)
  (export "ne" $ne)
  (export "lt_s" $lt_s)
  (export "lt_u" $lt_u)
  (export "le_s" $le_s)
  (export "le_u" $le_u)
  (export "gt_s" $gt_s)
  (export "gt_u" $gt_u)
  (export "ge_s" $ge_s)
  (export "ge_u" $ge_u)
)

(assert_eq (invoke "add" (i32.literal 1) (i32.literal 1)) (i32.literal 2))
(assert_eq (invoke "add" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "add" (i32.literal 0x7fffffff) (i32.literal 1)) (i32.literal 0x80000000))
(assert_eq (invoke "add" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0x7fffffff))
(assert_eq (invoke "add" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "add" (i32.literal 0x3fffffff) (i32.literal 1)) (i32.literal 0x40000000))

(assert_eq (invoke "sub" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "sub" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "sub" (i32.literal 0x7fffffff) (i32.literal -1)) (i32.literal 0x80000000))
(assert_eq (invoke "sub" (i32.literal 0x80000000) (i32.literal 1)) (i32.literal 0x7fffffff))
(assert_eq (invoke "sub" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "sub" (i32.literal 0x3fffffff) (i32.literal -1)) (i32.literal 0x40000000))

(assert_eq (invoke "mul" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "mul" (i32.literal 1) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "mul" (i32.literal -1) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "mul" (i32.literal 0x10000000) (i32.literal 4096)) (i32.literal 0))
(assert_eq (invoke "mul" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "mul" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0x80000000))
(assert_eq (invoke "mul" (i32.literal 0x7fffffff) (i32.literal -1)) (i32.literal 0x80000001))
(assert_eq (invoke "mul" (i32.literal 0x01234567) (i32.literal 0x76543210)) (i32.literal 0x358e7470))

(assert_trap (invoke "div_s" (i32.literal 1) (i32.literal 0)) "runtime: integer divide by zero")
(assert_trap (invoke "div_s" (i32.literal 0) (i32.literal 0)) "runtime: integer divide by zero")
(assert_trap (invoke "div_s" (i32.literal 0x80000000) (i32.literal -1)) "runtime: integer overflow")
(assert_eq (invoke "div_s" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "div_s" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "div_s" (i32.literal -1) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "div_s" (i32.literal 0x80000000) (i32.literal 2)) (i32.literal 0xc0000000))
(assert_eq (invoke "div_s" (i32.literal 0x80000001) (i32.literal 1000)) (i32.literal 0xffdf3b65))
(assert_eq (invoke "div_s" (i32.literal 5) (i32.literal 2)) (i32.literal 2))
(assert_eq (invoke "div_s" (i32.literal -5) (i32.literal 2)) (i32.literal -2))
(assert_eq (invoke "div_s" (i32.literal 5) (i32.literal -2)) (i32.literal -2))
(assert_eq (invoke "div_s" (i32.literal -5) (i32.literal -2)) (i32.literal 2))
(assert_eq (invoke "div_s" (i32.literal 7) (i32.literal 3)) (i32.literal 2))
(assert_eq (invoke "div_s" (i32.literal -7) (i32.literal 3)) (i32.literal -2))
(assert_eq (invoke "div_s" (i32.literal 7) (i32.literal -3)) (i32.literal -2))
(assert_eq (invoke "div_s" (i32.literal -7) (i32.literal -3)) (i32.literal 2))
(assert_eq (invoke "div_s" (i32.literal 11) (i32.literal 5)) (i32.literal 2))
(assert_eq (invoke "div_s" (i32.literal 17) (i32.literal 7)) (i32.literal 2))

(assert_trap (invoke "div_u" (i32.literal 1) (i32.literal 0)) "runtime: integer divide by zero")
(assert_trap (invoke "div_u" (i32.literal 0) (i32.literal 0)) "runtime: integer divide by zero")
(assert_eq (invoke "div_u" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "div_u" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "div_u" (i32.literal -1) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "div_u" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "div_u" (i32.literal 0x80000000) (i32.literal 2)) (i32.literal 0x40000000))
(assert_eq (invoke "div_u" (i32.literal 0x8ff00ff0) (i32.literal 0x10001)) (i32.literal 0x8fef))
(assert_eq (invoke "div_u" (i32.literal 0x80000001) (i32.literal 1000)) (i32.literal 0x20c49b))
(assert_eq (invoke "div_u" (i32.literal 5) (i32.literal 2)) (i32.literal 2))
(assert_eq (invoke "div_u" (i32.literal -5) (i32.literal 2)) (i32.literal 0x7ffffffd))
(assert_eq (invoke "div_u" (i32.literal 5) (i32.literal -2)) (i32.literal 0))
(assert_eq (invoke "div_u" (i32.literal -5) (i32.literal -2)) (i32.literal 0))
(assert_eq (invoke "div_u" (i32.literal 7) (i32.literal 3)) (i32.literal 2))
(assert_eq (invoke "div_u" (i32.literal 11) (i32.literal 5)) (i32.literal 2))
(assert_eq (invoke "div_u" (i32.literal 17) (i32.literal 7)) (i32.literal 2))

(assert_trap (invoke "rem_s" (i32.literal 1) (i32.literal 0)) "runtime: integer divide by zero")
(assert_trap (invoke "rem_s" (i32.literal 0) (i32.literal 0)) "runtime: integer divide by zero")
(assert_eq (invoke "rem_s" (i32.literal 0x7fffffff) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "rem_s" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "rem_s" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "rem_s" (i32.literal -1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "rem_s" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "rem_s" (i32.literal 0x80000000) (i32.literal 2)) (i32.literal 0))
(assert_eq (invoke "rem_s" (i32.literal 0x80000001) (i32.literal 1000)) (i32.literal -647))
(assert_eq (invoke "rem_s" (i32.literal 5) (i32.literal 2)) (i32.literal 1))
(assert_eq (invoke "rem_s" (i32.literal -5) (i32.literal 2)) (i32.literal -1))
(assert_eq (invoke "rem_s" (i32.literal 5) (i32.literal -2)) (i32.literal 1))
(assert_eq (invoke "rem_s" (i32.literal -5) (i32.literal -2)) (i32.literal -1))
(assert_eq (invoke "rem_s" (i32.literal 7) (i32.literal 3)) (i32.literal 1))
(assert_eq (invoke "rem_s" (i32.literal -7) (i32.literal 3)) (i32.literal -1))
(assert_eq (invoke "rem_s" (i32.literal 7) (i32.literal -3)) (i32.literal 1))
(assert_eq (invoke "rem_s" (i32.literal -7) (i32.literal -3)) (i32.literal -1))
(assert_eq (invoke "rem_s" (i32.literal 11) (i32.literal 5)) (i32.literal 1))
(assert_eq (invoke "rem_s" (i32.literal 17) (i32.literal 7)) (i32.literal 3))

(assert_trap (invoke "rem_u" (i32.literal 1) (i32.literal 0)) "runtime: integer divide by zero")
(assert_trap (invoke "rem_u" (i32.literal 0) (i32.literal 0)) "runtime: integer divide by zero")
(assert_eq (invoke "rem_u" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "rem_u" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "rem_u" (i32.literal -1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "rem_u" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0x80000000))
(assert_eq (invoke "rem_u" (i32.literal 0x80000000) (i32.literal 2)) (i32.literal 0))
(assert_eq (invoke "rem_u" (i32.literal 0x8ff00ff0) (i32.literal 0x10001)) (i32.literal 0x8001))
(assert_eq (invoke "rem_u" (i32.literal 0x80000001) (i32.literal 1000)) (i32.literal 649))
(assert_eq (invoke "rem_u" (i32.literal 5) (i32.literal 2)) (i32.literal 1))
(assert_eq (invoke "rem_u" (i32.literal -5) (i32.literal 2)) (i32.literal 1))
(assert_eq (invoke "rem_u" (i32.literal 5) (i32.literal -2)) (i32.literal 5))
(assert_eq (invoke "rem_u" (i32.literal -5) (i32.literal -2)) (i32.literal -5))
(assert_eq (invoke "rem_u" (i32.literal 7) (i32.literal 3)) (i32.literal 1))
(assert_eq (invoke "rem_u" (i32.literal 11) (i32.literal 5)) (i32.literal 1))
(assert_eq (invoke "rem_u" (i32.literal 17) (i32.literal 7)) (i32.literal 3))

(assert_eq (invoke "and" (i32.literal 1) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "and" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "and" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "and" (i32.literal 0) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "and" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "and" (i32.literal 0x7fffffff) (i32.literal -1)) (i32.literal 0x7fffffff))
(assert_eq (invoke "and" (i32.literal 0xf0f0ffff) (i32.literal 0xfffff0f0)) (i32.literal 0xf0f0f0f0))
(assert_eq (invoke "and" (i32.literal 0xffffffff) (i32.literal 0xffffffff)) (i32.literal 0xffffffff))

(assert_eq (invoke "or" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "or" (i32.literal 0) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "or" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "or" (i32.literal 0) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "or" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal -1))
(assert_eq (invoke "or" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 0x80000000))
(assert_eq (invoke "or" (i32.literal 0xf0f0ffff) (i32.literal 0xfffff0f0)) (i32.literal 0xffffffff))
(assert_eq (invoke "or" (i32.literal 0xffffffff) (i32.literal 0xffffffff)) (i32.literal 0xffffffff))

(assert_eq (invoke "xor" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "xor" (i32.literal 0) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "xor" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "xor" (i32.literal 0) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "xor" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal -1))
(assert_eq (invoke "xor" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 0x80000000))
(assert_eq (invoke "xor" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 0x7fffffff))
(assert_eq (invoke "xor" (i32.literal -1) (i32.literal 0x7fffffff)) (i32.literal 0x80000000))
(assert_eq (invoke "xor" (i32.literal 0xf0f0ffff) (i32.literal 0xfffff0f0)) (i32.literal 0x0f0f0f0f))
(assert_eq (invoke "xor" (i32.literal 0xffffffff) (i32.literal 0xffffffff)) (i32.literal 0))

(assert_eq (invoke "shl" (i32.literal 1) (i32.literal 1)) (i32.literal 2))
(assert_eq (invoke "shl" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "shl" (i32.literal 0x7fffffff) (i32.literal 1)) (i32.literal 0xfffffffe))
(assert_eq (invoke "shl" (i32.literal 0xffffffff) (i32.literal 1)) (i32.literal 0xfffffffe))
(assert_eq (invoke "shl" (i32.literal 0x80000000) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "shl" (i32.literal 0x40000000) (i32.literal 1)) (i32.literal 0x80000000))
(assert_eq (invoke "shl" (i32.literal 1) (i32.literal 31)) (i32.literal 0x80000000))
(assert_eq (invoke "shl" (i32.literal 1) (i32.literal 32)) (i32.literal 0))
(assert_eq (invoke "shl" (i32.literal 1) (i32.literal 33)) (i32.literal 0))
(assert_eq (invoke "shl" (i32.literal 1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "shl" (i32.literal 1) (i32.literal 0x7fffffff)) (i32.literal 0))

(assert_eq (invoke "shr_s" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "shr_s" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "shr_s" (i32.literal -1) (i32.literal 1)) (i32.literal -1))
(assert_eq (invoke "shr_s" (i32.literal 0x7fffffff) (i32.literal 1)) (i32.literal 0x3fffffff))
(assert_eq (invoke "shr_s" (i32.literal 0x80000000) (i32.literal 1)) (i32.literal 0xc0000000))
(assert_eq (invoke "shr_s" (i32.literal 0x40000000) (i32.literal 1)) (i32.literal 0x20000000))
(assert_eq (invoke "shr_s" (i32.literal 1) (i32.literal 32)) (i32.literal 0))
(assert_eq (invoke "shr_s" (i32.literal 1) (i32.literal 33)) (i32.literal 0))
(assert_eq (invoke "shr_s" (i32.literal 1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "shr_s" (i32.literal 1) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "shr_s" (i32.literal 1) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "shr_s" (i32.literal 0x80000000) (i32.literal 31)) (i32.literal -1))
(assert_eq (invoke "shr_s" (i32.literal -1) (i32.literal 32)) (i32.literal -1))
(assert_eq (invoke "shr_s" (i32.literal -1) (i32.literal 33)) (i32.literal -1))
(assert_eq (invoke "shr_s" (i32.literal -1) (i32.literal -1)) (i32.literal -1))
(assert_eq (invoke "shr_s" (i32.literal -1) (i32.literal 0x7fffffff)) (i32.literal -1))
(assert_eq (invoke "shr_s" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal -1))

(assert_eq (invoke "shr_u" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "shr_u" (i32.literal -1) (i32.literal 1)) (i32.literal 0x7fffffff))
(assert_eq (invoke "shr_u" (i32.literal 0x7fffffff) (i32.literal 1)) (i32.literal 0x3fffffff))
(assert_eq (invoke "shr_u" (i32.literal 0x80000000) (i32.literal 1)) (i32.literal 0x40000000))
(assert_eq (invoke "shr_u" (i32.literal 0x40000000) (i32.literal 1)) (i32.literal 0x20000000))
(assert_eq (invoke "shr_u" (i32.literal 1) (i32.literal 32)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal 1) (i32.literal 33)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal 1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal 1) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal 1) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal 0x80000000) (i32.literal 31)) (i32.literal 1))
(assert_eq (invoke "shr_u" (i32.literal -1) (i32.literal 32)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal -1) (i32.literal 33)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal -1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal -1) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "shr_u" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 0))

(assert_eq (invoke "clz" (i32.literal 0xffffffff)) (i32.literal 0))
(assert_eq (invoke "clz" (i32.literal 0)) (i32.literal 32))
(assert_eq (invoke "clz" (i32.literal 0x00008000)) (i32.literal 16))
(assert_eq (invoke "clz" (i32.literal 0xff)) (i32.literal 24))
(assert_eq (invoke "clz" (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "clz" (i32.literal 1)) (i32.literal 31))
(assert_eq (invoke "clz" (i32.literal 2)) (i32.literal 30))

(assert_eq (invoke "ctz" (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "ctz" (i32.literal 0)) (i32.literal 32))
(assert_eq (invoke "ctz" (i32.literal 0x00008000)) (i32.literal 15))
(assert_eq (invoke "ctz" (i32.literal 0x00010000)) (i32.literal 16))
(assert_eq (invoke "ctz" (i32.literal 0x80000000)) (i32.literal 31))

(assert_eq (invoke "popcnt" (i32.literal -1)) (i32.literal 32))
(assert_eq (invoke "popcnt" (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "popcnt" (i32.literal 0x00008000)) (i32.literal 1))

(assert_eq (invoke "eq" (i32.literal 0) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "eq" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "eq" (i32.literal -1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "eq" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "eq" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "eq" (i32.literal -1) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "eq" (i32.literal 1) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "eq" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "eq" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "eq" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 0))

(assert_eq (invoke "ne" (i32.literal 0) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "ne" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "ne" (i32.literal -1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "ne" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "ne" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "ne" (i32.literal -1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "ne" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "ne" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "ne" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "ne" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 1))

(assert_eq (invoke "lt_s" (i32.literal 0) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "lt_s" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "lt_s" (i32.literal -1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "lt_s" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "lt_s" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "lt_s" (i32.literal -1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "lt_s" (i32.literal 1) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "lt_s" (i32.literal 0) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "lt_s" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "lt_s" (i32.literal 0) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "lt_s" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "lt_s" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "lt_s" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "lt_s" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 0))

(assert_eq (invoke "lt_u" (i32.literal 0) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal -1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal -1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal 1) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal 0) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "lt_u" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal 0) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "lt_u" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "lt_u" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "lt_u" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 1))

(assert_eq (invoke "le_s" (i32.literal 0) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal -1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal -1) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal 1) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "le_s" (i32.literal 0) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal 0) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "le_s" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "le_s" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "le_s" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 0))

(assert_eq (invoke "le_u" (i32.literal 0) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "le_u" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "le_u" (i32.literal -1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "le_u" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "le_u" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "le_u" (i32.literal -1) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "le_u" (i32.literal 1) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "le_u" (i32.literal 0) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "le_u" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "le_u" (i32.literal 0) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "le_u" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "le_u" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "le_u" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "le_u" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 1))

(assert_eq (invoke "gt_s" (i32.literal 0) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal -1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal -1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "gt_s" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal 0) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "gt_s" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "gt_s" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "gt_s" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 1))

(assert_eq (invoke "gt_u" (i32.literal 0) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "gt_u" (i32.literal 1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "gt_u" (i32.literal -1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "gt_u" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "gt_u" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "gt_u" (i32.literal -1) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "gt_u" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "gt_u" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "gt_u" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "gt_u" (i32.literal 0) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "gt_u" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "gt_u" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "gt_u" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "gt_u" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 0))

(assert_eq (invoke "ge_s" (i32.literal 0) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "ge_s" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "ge_s" (i32.literal -1) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "ge_s" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "ge_s" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "ge_s" (i32.literal -1) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "ge_s" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "ge_s" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "ge_s" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 0))
(assert_eq (invoke "ge_s" (i32.literal 0) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "ge_s" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "ge_s" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "ge_s" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 0))
(assert_eq (invoke "ge_s" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 1))

(assert_eq (invoke "ge_u" (i32.literal 0) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal 1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal -1) (i32.literal 1)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal 0x80000000) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal 0x7fffffff) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal -1) (i32.literal -1)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal 1) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal 0) (i32.literal 1)) (i32.literal 0))
(assert_eq (invoke "ge_u" (i32.literal 0x80000000) (i32.literal 0)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal 0) (i32.literal 0x80000000)) (i32.literal 0))
(assert_eq (invoke "ge_u" (i32.literal 0x80000000) (i32.literal -1)) (i32.literal 0))
(assert_eq (invoke "ge_u" (i32.literal -1) (i32.literal 0x80000000)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal 0x80000000) (i32.literal 0x7fffffff)) (i32.literal 1))
(assert_eq (invoke "ge_u" (i32.literal 0x7fffffff) (i32.literal 0x80000000)) (i32.literal 0))
