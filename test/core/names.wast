;; Test files can define multiple modules. Test that implementations treat
;; each module independently from the other.

(module
  (func (export "foo") (result i32) (i32.const 0))
)

(assert_return (invoke "foo") (i32.const 0))

;; Another module, same function name, different contents.

(module
  (func (export "foo") (result i32) (i32.const 1))
)

(assert_return (invoke "foo") (i32.const 1))


(module
  ;; Test that we can use the empty string as a symbol.
  (func (export "") (result f32) (f32.const 0x1.91p+2))

  ;; Test that we can use names beginning with a digit.
  (func (export "0") (result f32) (f32.const 0x1.97p+2))

  ;; Test that we can use names beginning with an underscore.
  (func (export "_") (result f32) (f32.const 0x1.98p+2))

  ;; Test that we can use names beginning with a dollar sign.
  (func (export "$") (result f32) (f32.const 0x1.99p+2))

  ;; Test that we can use names beginning with an at sign.
  (func (export "@") (result f32) (f32.const 0x2.00p+2))

  ;; Test that we can use non-alphanumeric names.
  (func (export "~!@#$%^&*()_+`-={}|[]\\:\";'<>?,./ ") (result f32) (f32.const 0x1.96p+2))

  ;; Test that we can use names that have special meaning in JS.
  (func (export "NaN") (result f32) (f32.const 0x2.01p+2))
  (func (export "Infinity") (result f32) (f32.const 0x2.02p+2))
  (func (export "if") (result f32) (f32.const 0x2.03p+2))

  ;; Test that we can use common libc names without conflict.
  (func (export "malloc") (result f32) (f32.const 0x1.92p+2))

  ;; Test that we can use some libc hidden names without conflict.
  (func (export "_malloc") (result f32) (f32.const 0x1.93p+2))
  (func (export "__malloc") (result f32) (f32.const 0x1.94p+2))
)

(assert_return (invoke "") (f32.const 0x1.91p+2))
(assert_return (invoke "malloc") (f32.const 0x1.92p+2))
(assert_return (invoke "_malloc") (f32.const 0x1.93p+2))
(assert_return (invoke "__malloc") (f32.const 0x1.94p+2))
(assert_return (invoke "~!@#$%^&*()_+`-={}|[]\\:\";'<>?,./ ") (f32.const 0x1.96p+2))
(assert_return (invoke "0") (f32.const 0x1.97p+2))
(assert_return (invoke "_") (f32.const 0x1.98p+2))
(assert_return (invoke "$") (f32.const 0x1.99p+2))
(assert_return (invoke "@") (f32.const 0x2.00p+2))
(assert_return (invoke "NaN") (f32.const 0x2.01p+2))
(assert_return (invoke "Infinity") (f32.const 0x2.02p+2))
(assert_return (invoke "if") (f32.const 0x2.03p+2))

(module
  ;; Test that we can use indices instead of names to reference imports,
  ;; exports, functions and parameters.
  (import "spectest" "print" (func (param i32)))
  (func (import "spectest" "print") (param i32))
  (func (param i32) (param i32)
    (call 0 (get_local 0))
    (call 1 (get_local 1))
  )
  (export "print32" (func 2))
)

(invoke "print32" (i32.const 42) (i32.const 123))

;; Test that byte sequences which do not validate as UTF-8 are rejected.

(assert_invalid (module (func (export "\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\bf"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\c1"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\c2\80\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\c2"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\c2\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\c2\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\c2\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\c2\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\df\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\df\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\df\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\df\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e1\80\80\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e1\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e0\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e0\9f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e0\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e0\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e1\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e1\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e1\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\e1\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ec\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ec\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ec\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ec\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ed\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ed\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ed\a0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ed\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ee\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ee\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ee\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ee\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ef\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ef\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ef\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ef\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f1\80\80\80\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f1\80\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f0\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f0\8f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f0\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f0\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f1\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f1\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f1\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f1\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f3\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f3\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f3\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f3\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f4\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f4\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f4\90"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f4\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\f5"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (export "\ff"))) "invalid utf-8 byte sequence in identifier")

(assert_invalid (module (func (import "spectest" "\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\bf"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\c1"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\c2\80\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\c2"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\c2\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\c2\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\c2\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\c2\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\df\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\df\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\df\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\df\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e1\80\80\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e1\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e0\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e0\9f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e0\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e0\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e1\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e1\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e1\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\e1\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ec\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ec\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ec\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ec\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ed\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ed\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ed\a0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ed\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ee\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ee\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ee\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ee\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ef\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ef\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ef\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ef\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f1\80\80\80\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f1\80\80"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f0\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f0\8f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f0\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f0\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f1\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f1\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f1\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f1\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f3\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f3\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f3\c0"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f3\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f4\00"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f4\7f"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f4\90"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f4\ff"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\f5"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "spectest" "\ff"))) "invalid utf-8 byte sequence in identifier")

(assert_invalid (module (func (import "\80" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\bf" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\c1" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\c2\80\80" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\c2" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\c2\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\c2\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\c2\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\c2\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\df\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\df\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\df\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\df\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e1\80\80\80" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e1\80" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e0\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e0\9f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e0\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e0\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e1\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e1\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e1\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\e1\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ec\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ec\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ec\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ec\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ed\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ed\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ed\a0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ed\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ee\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ee\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ee\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ee\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ef\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ef\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ef\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ef\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f1\80\80\80\80" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f1\80\80" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f0\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f0\8f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f0\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f0\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f1\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f1\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f1\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f1\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f3\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f3\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f3\c0" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f3\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f4\00" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f4\7f" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f4\90" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f4\ff" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\f5" "field"))) "invalid utf-8 byte sequence in identifier")
(assert_invalid (module (func (import "\ff" "field"))) "invalid utf-8 byte sequence in identifier")
