.. MATH

.. To comment out stuff

.. |void#1| mathdef:: {}


.. Type-setting of names
.. X - (multi-letter) variables / non-terminals
.. F - functions
.. K - keywords / terminals
.. B - binary grammar non-terminals
.. T - textual grammar non-terminals

.. |X| mathdef:: \mathit
.. |F| mathdef:: \mathrm
.. |K| mathdef:: \mathsf
.. |B| mathdef:: \mathtt
.. |T| mathdef:: \mathtt


.. Auxiliary definitions for grammars

.. |production| mathdef:: \void

.. |concat| mathdef:: \xref{syntax/conventions}{syntax-concat}{\F{concat}}
.. |with| mathdef:: \xref{syntax/conventions}{syntax-record}{\mathrel{\mbox{with}}}
.. |compose| mathdef:: \xref{syntax/conventions}{syntax-record}{\oplus}
.. |bigcompose| mathdef:: \xref{syntax/conventions}{syntax-record}{\bigoplus}


.. Lexical grammar, terminals

.. |textl| mathdef:: \mbox{‘}
.. |textr| mathdef:: \mbox{’}
.. |text#1| mathdef:: \textl\mathtt{#1}\textr

.. |Tcommentl| mathdef:: \text{{(}{;}}
.. |Tcommentr| mathdef:: \text{{;}{)}}
.. |Tcommentd| mathdef:: \text{{;}{;}}


.. Lexical grammar, non-terminals

.. |Tchar| mathdef:: \xref{text/lexical}{text-char}{\T{char}}
.. |Tspace| mathdef:: \xref{text/lexical}{text-space}{\T{space}}
.. |Tformat| mathdef:: \xref{text/lexical}{text-format}{\T{format}}

.. |Ttoken| mathdef:: \xref{text/lexical}{text-token}{\T{token}}
.. |Tkeyword| mathdef:: \xref{text/lexical}{text-keyword}{\T{keyword}}
.. |Treserved| mathdef:: \xref{text/lexical}{text-reserved}{\T{reserved}}

.. |Tcomment| mathdef:: \xref{text/lexical}{text-comment}{\T{comment}}
.. |Tlinecomment| mathdef:: \xref{text/lexical}{text-comment}{\T{linecomment}}
.. |Tblockcomment| mathdef:: \xref{text/lexical}{text-comment}{\T{blockcomment}}
.. |Tlinechar| mathdef:: \xref{text/lexical}{text-comment}{\T{linechar}}
.. |Tblockchar| mathdef:: \xref{text/lexical}{text-comment}{\T{blockchar}}


.. Lexical grammar, meta functions

.. |utf8| mathdef:: \xref{syntax/values}{syntax-utf8}{\F{utf8}}


.. Values, terminals

.. |hex#1| mathdef:: \mathtt{0x#1}
.. |unicode#1| mathdef:: \mathrm{U{+}#1}

.. |NAN| mathdef:: \xref{syntax/values}{syntax-float}{\K{nan}}


.. Values, non-terminals

.. |byte| mathdef:: \xref{syntax/values}{syntax-byte}{\X{byte}}

.. |uX#1| mathdef:: {\X{u}#1}
.. |sX#1| mathdef:: {\X{s}#1}
.. |iX#1| mathdef:: {\X{i}#1}
.. |fX#1| mathdef:: {\X{f}#1}

.. |uN| mathdef:: \xref{syntax/values}{syntax-int}{\uX{N}}
.. |uM| mathdef:: \xref{syntax/values}{syntax-int}{\uX{M}}
.. |u1| mathdef:: \xref{syntax/values}{syntax-int}{\uX{\X{1}}}
.. |u8| mathdef:: \xref{syntax/values}{syntax-int}{\uX{\X{8}}}
.. |u16| mathdef:: \xref{syntax/values}{syntax-int}{\uX{\X{16}}}
.. |u32| mathdef:: \xref{syntax/values}{syntax-int}{\uX{\X{32}}}
.. |u64| mathdef:: \xref{syntax/values}{syntax-int}{\uX{\X{64}}}

.. |sN| mathdef:: \xref{syntax/values}{syntax-int}{\sX{N}}
.. |s8| mathdef:: \xref{syntax/values}{syntax-int}{\sX{\X{8}}}
.. |s16| mathdef:: \xref{syntax/values}{syntax-int}{\sX{\X{16}}}
.. |s32| mathdef:: \xref{syntax/values}{syntax-int}{\sX{\X{32}}}
.. |s64| mathdef:: \xref{syntax/values}{syntax-int}{\sX{\X{64}}}

.. |iN| mathdef:: \xref{syntax/values}{syntax-int}{\iX{N}}
.. |i32| mathdef:: \xref{syntax/values}{syntax-int}{\iX{\X{32}}}
.. |i64| mathdef:: \xref{syntax/values}{syntax-int}{\iX{\X{64}}}

.. |fN| mathdef:: \xref{syntax/values}{syntax-float}{\fX{N}}
.. |fNmag| mathdef:: \xref{syntax/values}{syntax-float}{\fX{\X{Nmag}}}
.. |f32| mathdef:: \xref{syntax/values}{syntax-float}{\fX{\X{32}}}
.. |f64| mathdef:: \xref{syntax/values}{syntax-float}{\fX{\X{64}}}

.. |vec| mathdef:: \xref{syntax/values}{syntax-vec}{\X{vec}}
.. |name| mathdef:: \xref{syntax/values}{syntax-name}{\X{name}}
.. |codepoint| mathdef:: \xref{syntax/values}{syntax-name}{\X{codepoint}}


.. Values, binary non-terminals

.. |Bbyte| mathdef:: \xref{binary/values}{binary-byte}{\B{byte}}

.. |BuX#1| mathdef:: {\B{u}#1}
.. |BsX#1| mathdef:: {\B{s}#1}
.. |BiX#1| mathdef:: {\B{i}#1}
.. |BfX#1| mathdef:: {\B{f}#1}

.. |BuN| mathdef:: \xref{binary/values}{binary-int}{\BuX{N}}
.. |Bu1| mathdef:: \xref{binary/values}{binary-int}{\BuX{\B{1}}}
.. |Bu8| mathdef:: \xref{binary/values}{binary-int}{\BuX{\B{8}}}
.. |Bu16| mathdef:: \xref{binary/values}{binary-int}{\BuX{\B{16}}}
.. |Bu32| mathdef:: \xref{binary/values}{binary-int}{\BuX{\B{32}}}
.. |Bu64| mathdef:: \xref{binary/values}{binary-int}{\BuX{\B{64}}}

.. |BsN| mathdef:: \xref{binary/values}{binary-int}{\BsX{N}}
.. |Bs32| mathdef:: \xref{binary/values}{binary-int}{\BsX{\B{32}}}
.. |Bs64| mathdef:: \xref{binary/values}{binary-int}{\BsX{\B{64}}}

.. |BiN| mathdef:: \xref{binary/values}{binary-int}{\BiX{N}}
.. |Bi32| mathdef:: \xref{binary/values}{binary-int}{\BiX{\B{32}}}
.. |Bi64| mathdef:: \xref{binary/values}{binary-int}{\BiX{\B{64}}}

.. |BfN| mathdef:: \xref{binary/values}{binary-float}{\BfX{N}}
.. |Bf32| mathdef:: \xref{binary/values}{binary-float}{\BfX{\B{32}}}
.. |Bf64| mathdef:: \xref{binary/values}{binary-float}{\BfX{\B{64}}}

.. |Bvec| mathdef:: \xref{binary/values}{binary-vec}{\B{vec}}
.. |Bname| mathdef:: \xref{binary/values}{binary-name}{\B{name}}
.. |Bcodepoint| mathdef:: \xref{binary/values}{binary-name}{\B{codepoint}}
.. |Bcodeval| mathdef:: \xref{binary/values}{binary-name}{\B{codeval}}
.. |Bcodecont| mathdef:: \xref{binary/values}{binary-name}{\B{cont}}


.. Values, textual non-terminals

.. |Tbyte| mathdef:: \xref{text/values}{text-byte}{\T{byte}}

.. |Tsign| mathdef:: \xref{text/values}{text-sign}{\T{sign}}
.. |Tdigit| mathdef:: \xref{text/values}{text-digit}{\T{digit}}
.. |Thexdigit| mathdef:: \xref{text/values}{text-hexdigit}{\T{hexdigit}}
.. |Tnum| mathdef:: \xref{text/values}{text-num}{\T{num}}
.. |Thexnum| mathdef:: \xref{text/values}{text-hexnum}{\T{hexnum}}
.. |Tfrac| mathdef:: \xref{text/values}{text-frac}{\T{frac}}
.. |Thexfrac| mathdef:: \xref{text/values}{text-hexfrac}{\T{hexfrac}}
.. |Tfloat| mathdef:: \xref{text/values}{text-float}{\T{float}}
.. |Thexfloat| mathdef:: \xref{text/values}{text-hexfloat}{\T{hexfloat}}

.. |TuX#1| mathdef:: {\T{u}#1}
.. |TsX#1| mathdef:: {\T{s}#1}
.. |TiX#1| mathdef:: {\T{i}#1}
.. |TfX#1| mathdef:: {\T{f}#1}

.. |TuN| mathdef:: \xref{text/values}{text-int}{\TuX{N}}
.. |Tu1| mathdef:: \xref{text/values}{text-int}{\TuX{\T{1}}}
.. |Tu8| mathdef:: \xref{text/values}{text-int}{\TuX{\T{8}}}
.. |Tu16| mathdef:: \xref{text/values}{text-int}{\TuX{\T{16}}}
.. |Tu32| mathdef:: \xref{text/values}{text-int}{\TuX{\T{32}}}
.. |Tu64| mathdef:: \xref{text/values}{text-int}{\TuX{\T{64}}}

.. |TsN| mathdef:: \xref{text/values}{text-int}{\TsX{N}}
.. |Ts32| mathdef:: \xref{text/values}{text-int}{\TsX{\T{32}}}
.. |Ts64| mathdef:: \xref{text/values}{text-int}{\TsX{\T{64}}}

.. |TiN| mathdef:: \xref{text/values}{text-int}{\TiX{N}}
.. |Ti32| mathdef:: \xref{text/values}{text-int}{\TiX{\T{32}}}
.. |Ti64| mathdef:: \xref{text/values}{text-int}{\TiX{\T{64}}}

.. |TfN| mathdef:: \xref{text/values}{text-float}{\TfX{N}}
.. |TfNmag| mathdef:: \xref{text/values}{text-float}{\TfX{N}\T{mag}}
.. |Tf32| mathdef:: \xref{text/values}{text-float}{\TfX{\T{32}}}
.. |Tf64| mathdef:: \xref{text/values}{text-float}{\TfX{\T{64}}}

.. |Tvec| mathdef:: \xref{text/values}{text-vec}{\T{vec}}
.. |Tstring| mathdef:: \xref{text/values}{text-string}{\T{string}}
.. |Tstringelem| mathdef:: \xref{text/values}{text-string}{\T{stringelem}}
.. |Tstringchar| mathdef:: \xref{text/values}{text-string}{\T{stringchar}}
.. |Tname| mathdef:: \xref{text/values}{text-name}{\T{name}}
.. |Tcodepoint| mathdef:: \xref{text/values}{text-name}{\T{codepoint}}
.. |Tcodeval| mathdef:: \xref{text/values}{text-name}{\T{codeval}}
.. |Tcodecont| mathdef:: \xref{text/values}{text-name}{\T{cont}}

.. |Tid| mathdef:: \xref{text/values}{text-id}{\T{id}}
.. |Tidchar| mathdef:: \xref{text/values}{text-id}{\T{idchar}}


.. Types, terminals

.. |I8| mathdef:: \xref{execution/runtime}{syntax-storagetype}{\K{i8}}
.. |I16| mathdef:: \xref{execution/runtime}{syntax-storagetype}{\K{i16}}
.. |I32| mathdef:: \xref{syntax/types}{syntax-valtype}{\K{i32}}
.. |I64| mathdef:: \xref{syntax/types}{syntax-valtype}{\K{i64}}
.. |F32| mathdef:: \xref{syntax/types}{syntax-valtype}{\K{f32}}
.. |F64| mathdef:: \xref{syntax/types}{syntax-valtype}{\K{f64}}

.. |ANYFUNC| mathdef:: \xref{syntax/types}{syntax-elemtype}{\K{anyfunc}}
.. |MVAR| mathdef:: \xref{syntax/types}{syntax-mut}{\K{var}}
.. |MCONST| mathdef:: \xref{syntax/types}{syntax-mut}{\K{const}}

.. |MIN| mathdef:: \K{min}
.. |MAX| mathdef:: \K{max}


.. Types, non-terminals

.. |valtype| mathdef:: \xref{syntax/types}{syntax-valtype}{\X{valtype}}
.. |resulttype| mathdef:: \xref{syntax/types}{syntax-resulttype}{\X{resulttype}}
.. |functype| mathdef:: \xref{syntax/types}{syntax-functype}{\X{functype}}
.. |globaltype| mathdef:: \xref{syntax/types}{syntax-globaltype}{\X{globaltype}}
.. |tabletype| mathdef:: \xref{syntax/types}{syntax-tabletype}{\X{tabletype}}
.. |elemtype| mathdef:: \xref{syntax/types}{syntax-elemtype}{\X{elemtype}}
.. |memtype| mathdef:: \xref{syntax/types}{syntax-memtype}{\X{memtype}}
.. |limits| mathdef:: \xref{syntax/types}{syntax-limits}{\X{limits}}
.. |mut| mathdef:: \xref{syntax/types}{syntax-mut}{\X{mut}}


.. Types, binary non-terminals

.. |Bvaltype| mathdef:: \xref{binary/types}{binary-valtype}{\B{valtype}}
.. |Bresulttype| mathdef:: \xref{binary/types}{binary-resulttype}{\B{resulttype}}
.. |Bblocktype| mathdef:: \xref{binary/types}{binary-blocktype}{\B{blocktype}}
.. |Bfunctype| mathdef:: \xref{binary/types}{binary-functype}{\B{functype}}
.. |Bglobaltype| mathdef:: \xref{binary/types}{binary-globaltype}{\B{globaltype}}
.. |Btabletype| mathdef:: \xref{binary/types}{binary-tabletype}{\B{tabletype}}
.. |Belemtype| mathdef:: \xref{binary/types}{binary-elemtype}{\B{elemtype}}
.. |Bmemtype| mathdef:: \xref{binary/types}{binary-memtype}{\B{memtype}}
.. |Blimits| mathdef:: \xref{binary/types}{binary-limits}{\B{limits}}
.. |Bmut| mathdef:: \xref{binary/types}{binary-mut}{\B{mut}}


.. Types, textual non-terminals

.. |Tvaltype| mathdef:: \xref{text/types}{text-valtype}{\T{valtype}}
.. |Tresulttype| mathdef:: \xref{text/types}{text-resulttype}{\T{resulttype}}
.. |Tblocktype| mathdef:: \xref{text/types}{text-blocktype}{\T{blocktype}}
.. |Tfunctype| mathdef:: \xref{text/types}{text-functype}{\T{functype}}
.. |Tglobaltype| mathdef:: \xref{text/types}{text-globaltype}{\T{globaltype}}
.. |Ttabletype| mathdef:: \xref{text/types}{text-tabletype}{\T{tabletype}}
.. |Telemtype| mathdef:: \xref{text/types}{text-elemtype}{\T{elemtype}}
.. |Tmemtype| mathdef:: \xref{text/types}{text-memtype}{\T{memtype}}
.. |Texterntype| mathdef:: \xref{text/types}{text-externtype}{\T{externtype}}
.. |Tlimits| mathdef:: \xref{text/types}{text-limits}{\T{limits}}
.. |Tparam| mathdef:: \xref{text/types}{text-functype}{\T{param}}
.. |Tresult| mathdef:: \xref{text/types}{text-functype}{\T{result}}


.. Indices

.. |typeidx| mathdef:: \xref{syntax/modules}{syntax-typeidx}{\X{typeidx}}
.. |funcidx| mathdef:: \xref{syntax/modules}{syntax-funcidx}{\X{funcidx}}
.. |tableidx| mathdef:: \xref{syntax/modules}{syntax-tableidx}{\X{tableidx}}
.. |memidx| mathdef:: \xref{syntax/modules}{syntax-memidx}{\X{memidx}}
.. |globalidx| mathdef:: \xref{syntax/modules}{syntax-globalidx}{\X{globalidx}}
.. |localidx| mathdef:: \xref{syntax/modules}{syntax-localidx}{\X{localidx}}
.. |labelidx| mathdef:: \xref{syntax/modules}{syntax-labelidx}{\X{labelidx}}

.. |Btypeidx| mathdef:: \xref{binary/modules}{binary-typeidx}{\B{typeidx}}
.. |Bfuncidx| mathdef:: \xref{binary/modules}{binary-funcidx}{\B{funcidx}}
.. |Btableidx| mathdef:: \xref{binary/modules}{binary-tableidx}{\B{tableidx}}
.. |Bmemidx| mathdef:: \xref{binary/modules}{binary-memidx}{\B{memidx}}
.. |Bglobalidx| mathdef:: \xref{binary/modules}{binary-globalidx}{\B{globalidx}}
.. |Blocalidx| mathdef:: \xref{binary/modules}{binary-localidx}{\B{localidx}}
.. |Blabelidx| mathdef:: \xref{binary/modules}{binary-labelidx}{\B{labelidx}}

.. |Ttypeidx| mathdef:: \xref{text/modules}{text-typeidx}{\T{typeidx}}
.. |Tfuncidx| mathdef:: \xref{text/modules}{text-funcidx}{\T{funcidx}}
.. |Ttableidx| mathdef:: \xref{text/modules}{text-tableidx}{\T{tableidx}}
.. |Tmemidx| mathdef:: \xref{text/modules}{text-memidx}{\T{memidx}}
.. |Tglobalidx| mathdef:: \xref{text/modules}{text-globalidx}{\T{globalidx}}
.. |Tlocalidx| mathdef:: \xref{text/modules}{text-localidx}{\T{localidx}}
.. |Tlabelidx| mathdef:: \xref{text/modules}{text-labelidx}{\T{labelidx}}

.. |Ttypebind| mathdef:: \xref{text/modules}{text-typebind}{\T{typebind}}
.. |Tfuncbind| mathdef:: \xref{text/modules}{text-funcbind}{\T{funcbind}}
.. |Ttablebind| mathdef:: \xref{text/modules}{text-tablebind}{\T{tablebind}}
.. |Tmembind| mathdef:: \xref{text/modules}{text-membind}{\T{membind}}
.. |Tglobalbind| mathdef:: \xref{text/modules}{text-globalbind}{\T{globalbind}}
.. |Tlocalbind| mathdef:: \xref{text/modules}{text-localbind}{\T{localbind}}
.. |Tlabelbind| mathdef:: \xref{text/modules}{text-labelbind}{\T{labelbind}}


.. Modules, terminals

.. |TYPES| mathdef:: \K{types}
.. |FUNCS| mathdef:: \K{funcs}
.. |TABLES| mathdef:: \K{tables}
.. |MEMS| mathdef:: \K{mems}
.. |GLOBALS| mathdef:: \K{globals}
.. |LOCALS| mathdef:: \K{locals}
.. |LABELS| mathdef:: \K{labels}
.. |LRETURN| mathdef:: \K{return}
.. |IMPORTS| mathdef:: \K{imports}
.. |EXPORTS| mathdef:: \K{exports}

.. |MODULE| mathdef:: \K{module}
.. |TYPE| mathdef:: \K{type}
.. |FUNC| mathdef:: \K{func}
.. |TABLE| mathdef:: \K{table}
.. |MEM| mathdef:: \K{mem}
.. |GLOBAL| mathdef:: \K{global}
.. |IMPORT| mathdef:: \K{import}
.. |EXPORT| mathdef:: \K{export}
.. |CODE| mathdef:: \K{code}
.. |DATA| mathdef:: \K{data}
.. |ELEM| mathdef:: \K{elem}
.. |START| mathdef:: \K{start}
.. |CUSTOM| mathdef:: \K{custom}

.. |INDEX| mathdef:: \K{index}
.. |VALUE| mathdef:: \K{value}
.. |INIT| mathdef:: \K{init}
.. |BODY| mathdef:: \K{body}
.. |NAME| mathdef:: \K{name}
.. |DESC| mathdef:: \K{desc}


.. Modules, non-terminals

.. |module| mathdef:: \xref{syntax/modules}{syntax-module}{\X{module}}
.. |type| mathdef:: \xref{syntax/modules}{syntax-type}{\X{type}}
.. |func| mathdef:: \xref{syntax/modules}{syntax-func}{\X{func}}
.. |table| mathdef:: \xref{syntax/modules}{syntax-table}{\X{table}}
.. |mem| mathdef:: \xref{syntax/modules}{syntax-mem}{\X{mem}}
.. |global| mathdef:: \xref{syntax/modules}{syntax-global}{\X{global}}
.. |import| mathdef:: \xref{syntax/modules}{syntax-import}{\X{import}}
.. |export| mathdef:: \xref{syntax/modules}{syntax-export}{\X{export}}
.. |importdesc| mathdef:: \xref{syntax/modules}{syntax-importdesc}{\X{importdesc}}
.. |exportdesc| mathdef:: \xref{syntax/modules}{syntax-exportdesc}{\X{exportdesc}}
.. |elem| mathdef:: \xref{syntax/modules}{syntax-elem}{\X{elem}}
.. |data| mathdef:: \xref{syntax/modules}{syntax-data}{\X{data}}
.. |start| mathdef:: \xref{syntax/modules}{syntax-start}{\X{start}}


.. Modules, binary non-terminals

.. |Bmagic| mathdef:: \xref{binary/modules}{binary-magic}{\B{magic}}
.. |Bversion| mathdef:: \xref{binary/modules}{binary-version}{\B{version}}
.. |Bmodule| mathdef:: \xref{binary/modules}{binary-module}{\B{module}}
.. |Bsection| mathdef:: \xref{binary/modules}{binary-module}{\B{section}}
.. |Bcustomsec| mathdef:: \xref{binary/modules}{binary-customsec}{\B{customsec}}
.. |Btypesec| mathdef:: \xref{binary/modules}{binary-typesec}{\B{typesec}}
.. |Bfuncsec| mathdef:: \xref{binary/modules}{binary-funcsec}{\B{funcsec}}
.. |Bcodesec| mathdef:: \xref{binary/modules}{binary-codesec}{\B{codesec}}
.. |Btablesec| mathdef:: \xref{binary/modules}{binary-tablesec}{\B{tablesec}}
.. |Bmemsec| mathdef:: \xref{binary/modules}{binary-memsec}{\B{memsec}}
.. |Bglobalsec| mathdef:: \xref{binary/modules}{binary-globalsec}{\B{globalsec}}
.. |Bimportsec| mathdef:: \xref{binary/modules}{binary-importsec}{\B{importsec}}
.. |Bexportsec| mathdef:: \xref{binary/modules}{binary-exportsec}{\B{exportsec}}
.. |Belemsec| mathdef:: \xref{binary/modules}{binary-elemsec}{\B{elemsec}}
.. |Bdatasec| mathdef:: \xref{binary/modules}{binary-datasec}{\B{datasec}}
.. |Bstartsec| mathdef:: \xref{binary/modules}{binary-startseg}{\B{startsec}}
.. |Bcustom| mathdef:: \xref{binary/modules}{binary-customsec}{\B{custom}}
.. |Btype| mathdef:: \xref{binary/modules}{binary-type}{\B{type}}
.. |Bfunc| mathdef:: \xref{binary/modules}{binary-func}{\B{func}}
.. |Btable| mathdef:: \xref{binary/modules}{binary-table}{\B{table}}
.. |Bmem| mathdef:: \xref{binary/modules}{binary-mem}{\B{mem}}
.. |Bglobal| mathdef:: \xref{binary/modules}{binary-global}{\B{global}}
.. |Bimport| mathdef:: \xref{binary/modules}{binary-import}{\B{import}}
.. |Bexport| mathdef:: \xref{binary/modules}{binary-export}{\B{export}}
.. |Bimportdesc| mathdef:: \xref{binary/modules}{binary-importdesc}{\B{importdesc}}
.. |Bexportdesc| mathdef:: \xref{binary/modules}{binary-exportdesc}{\B{exportdesc}}
.. |Belem| mathdef:: \xref{binary/modules}{binary-elem}{\B{elem}}
.. |Bcode| mathdef:: \xref{binary/modules}{binary-code}{\B{code}}
.. |Blocal| mathdef:: \xref{binary/modules}{binary-local}{\B{local}}
.. |Blocals| mathdef:: \xref{binary/modules}{binary-local}{\B{locals}}
.. |Bdata| mathdef:: \xref{binary/modules}{binary-data}{\B{data}}
.. |Bstart| mathdef:: \xref{binary/modules}{binary-start}{\B{start}}


.. Modules, textual non-terminals

.. |Tmodule| mathdef:: \xref{text/modules}{text-module}{\T{module}}
.. |Tmodulebody| mathdef:: \xref{text/modules}{text-modulebody}{\T{modulebody}}
.. |Tmodulefield| mathdef:: \xref{text/modules}{text-modulefield}{\T{modulefield}}
.. |Ttype| mathdef:: \xref{text/modules}{text-type}{\T{type}}
.. |Ttypeuse| mathdef:: \xref{text/modules}{text-typeuse}{\T{typeuse}}
.. |Tfunc| mathdef:: \xref{text/modules}{text-func}{\T{func}}
.. |Ttable| mathdef:: \xref{text/modules}{text-table}{\T{table}}
.. |Tmem| mathdef:: \xref{text/modules}{text-mem}{\T{mem}}
.. |Tglobal| mathdef:: \xref{text/modules}{text-global}{\T{global}}
.. |Timport| mathdef:: \xref{text/modules}{text-import}{\T{import}}
.. |Texport| mathdef:: \xref{text/modules}{text-export}{\T{export}}
.. |Timportdesc| mathdef:: \xref{text/modules}{text-importdesc}{\T{importdesc}}
.. |Texportdesc| mathdef:: \xref{text/modules}{text-exportdesc}{\T{exportdesc}}
.. |Telem| mathdef:: \xref{text/modules}{text-elem}{\T{elem}}
.. |Tcode| mathdef:: \xref{text/modules}{text-code}{\T{code}}
.. |Tlocal| mathdef:: \xref{text/modules}{text-local}{\T{local}}
.. |Tlocals| mathdef:: \xref{text/modules}{text-local}{\T{locals}}
.. |Tdata| mathdef:: \xref{text/modules}{text-data}{\T{data}}
.. |Tdatastring| mathdef:: \xref{text/modules}{text-datastring}{\T{datastring}}
.. |Tstart| mathdef:: \xref{text/modules}{text-start}{\T{start}}


.. Modules, meta functions

.. |funcs| mathdef:: \xref{execution/runtime}{syntax-externtype}{\F{funcs}}
.. |tables| mathdef:: \xref{execution/runtime}{syntax-externtype}{\F{tables}}
.. |mems| mathdef:: \xref{execution/runtime}{syntax-externtype}{\F{mems}}
.. |globals| mathdef:: \xref{execution/runtime}{syntax-externtype}{\F{globals}}


.. Instructions, terminals

.. |OFFSET| mathdef:: \K{offset}
.. |ALIGN| mathdef:: \K{align}

.. |UNREACHABLE| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{unreachable}}
.. |NOP| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{nop}}
.. |BLOCK| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{block}}
.. |LOOP| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{loop}}
.. |IF| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{if}}
.. |ELSE| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{else}}
.. |END| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{end}}
.. |BR| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{br}}
.. |BRIF| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{br\_if}}
.. |BRTABLE| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{br\_table}}
.. |RETURN| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{return}}
.. |CALL| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{call}}
.. |CALLINDIRECT| mathdef:: \xref{syntax/instructions}{syntax-instr-control}{\K{call\_indirect}}

.. |DROP| mathdef:: \xref{syntax/instructions}{syntax-instr-parametric}{\K{drop}}
.. |SELECT| mathdef:: \xref{syntax/instructions}{syntax-instr-parametric}{\K{select}}

.. |GETLOCAL| mathdef:: \xref{syntax/instructions}{syntax-instr-variable}{\K{get\_local}}
.. |SETLOCAL| mathdef:: \xref{syntax/instructions}{syntax-instr-variable}{\K{set\_local}}
.. |TEELOCAL| mathdef:: \xref{syntax/instructions}{syntax-instr-variable}{\K{tee\_local}}
.. |GETGLOBAL| mathdef:: \xref{syntax/instructions}{syntax-instr-variable}{\K{get\_global}}
.. |SETGLOBAL| mathdef:: \xref{syntax/instructions}{syntax-instr-variable}{\K{set\_global}}

.. |LOAD| mathdef:: \xref{syntax/instructions}{syntax-instr-memory}{\K{load}}
.. |STORE| mathdef:: \xref{syntax/instructions}{syntax-instr-memory}{\K{store}}
.. |CURRENTMEMORY| mathdef:: \xref{syntax/instructions}{syntax-instr-memory}{\K{current\_memory}}
.. |GROWMEMORY| mathdef:: \xref{syntax/instructions}{syntax-instr-memory}{\K{grow\_memory}}

.. |CONST| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{const}}
.. |EQZ| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{eqz}}
.. |EQ| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{eq}}
.. |NE| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{ne}}
.. |LT| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{lt}}
.. |GT| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{gt}}
.. |LE| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{le}}
.. |GE| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{ge}}
.. |CLZ| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{clz}}
.. |CTZ| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{ctz}}
.. |POPCNT| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{popcnt}}
.. |ABS| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{abs}}
.. |NEG| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{neg}}
.. |CEIL| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{ceil}}
.. |FLOOR| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{floor}}
.. |TRUNC| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{trunc}}
.. |NEAREST| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{nearest}}
.. |SQRT| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{sqrt}}
.. |ADD| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{add}}
.. |SUB| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{sub}}
.. |MUL| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{mul}}
.. |DIV| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{div}}
.. |REM| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{rem}}
.. |FMIN| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{min}}
.. |FMAX| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{max}}
.. |AND| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{and}}
.. |OR| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{or}}
.. |XOR| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{xor}}
.. |SHL| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{shl}}
.. |SHR| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{shr}}
.. |ROTL| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{rotl}}
.. |ROTR| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{rotr}}
.. |COPYSIGN| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{copysign}}

.. |CONVERT| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{convert}}
.. |EXTEND| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{extend}}
.. |WRAP| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{wrap}}
.. |PROMOTE| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{promote}}
.. |DEMOTE| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{demote}}
.. |REINTERPRET| mathdef:: \xref{syntax/instructions}{syntax-instr-numeric}{\K{reinterpret}}

.. |TRAP| mathdef:: \xref{execution/runtime}{syntax-instr-admin}{\K{trap}}
.. |LABEL| mathdef:: \xref{execution/runtime}{syntax-instr-admin}{\K{label}}
.. |FRAME| mathdef:: \xref{execution/runtime}{syntax-instr-admin}{\K{frame}}

.. |INVOKE| mathdef:: \xref{execution/runtime}{syntax-invoke}{\K{invoke}}
.. |INSTANTIATE| mathdef:: \xref{execution/runtime}{syntax-instantiate}{\K{instantiate}}
.. |INITGLOBAL| mathdef:: \xref{execution/runtime}{syntax-init_global}{\K{init\_global}}
.. |INITTABLE| mathdef:: \xref{execution/runtime}{syntax-init_table}{\K{init\_table}}
.. |INITMEM| mathdef:: \xref{execution/runtime}{syntax-init_mem}{\K{init\_mem}}


.. Instructions, non-terminals

.. |unop| mathdef:: \xref{syntax/instructions}{syntax-unop}{\X{unop}}
.. |binop| mathdef:: \xref{syntax/instructions}{syntax-binop}{\X{binop}}
.. |testop| mathdef:: \xref{syntax/instructions}{syntax-testop}{\X{testop}}
.. |relop| mathdef:: \xref{syntax/instructions}{syntax-relop}{\X{relop}}
.. |cvtop| mathdef:: \xref{syntax/instructions}{syntax-cvtop}{\X{cvtop}}

.. |iunop| mathdef:: \xref{syntax/instructions}{syntax-iunop}{\X{iunop}}
.. |ibinop| mathdef:: \xref{syntax/instructions}{syntax-ibinop}{\X{ibinop}}
.. |itestop| mathdef:: \xref{syntax/instructions}{syntax-itestop}{\X{itestop}}
.. |irelop| mathdef:: \xref{syntax/instructions}{syntax-irelop}{\X{irelop}}

.. |funop| mathdef:: \xref{syntax/instructions}{syntax-funop}{\X{funop}}
.. |fbinop| mathdef:: \xref{syntax/instructions}{syntax-fbinop}{\X{fbinop}}
.. |ftestop| mathdef:: \xref{syntax/instructions}{syntax-ftestop}{\X{ftestop}}
.. |frelop| mathdef:: \xref{syntax/instructions}{syntax-frelop}{\X{frelop}}

.. |sx| mathdef:: \xref{syntax/instructions}{syntax-sx}{\X{sx}}
.. |memarg| mathdef:: \xref{syntax/instructions}{syntax-memarg}{\X{memarg}}

.. |instr| mathdef:: \xref{syntax/instructions}{syntax-instr}{\X{instr}}
.. |expr| mathdef:: \xref{syntax/instructions}{syntax-expr}{\X{expr}}


.. Instructions, binary non-terminals

.. |Bmemarg| mathdef:: \xref{binary/instructions}{binary-memarg}{\B{memarg}}

.. |Binstr| mathdef:: \xref{binary/instructions}{binary-instr}{\B{instr}}
.. |Bexpr| mathdef:: \xref{binary/instructions}{binary-expr}{\B{expr}}


.. Instructions, textual non-terminals

.. |Tmemarg| mathdef:: \xref{text/instructions}{text-memarg}{\T{memarg}}
.. |Talign| mathdef:: \xref{text/instructions}{text-memarg}{\T{align}}
.. |Toffset| mathdef:: \xref{text/instructions}{text-memarg}{\T{offset}}

.. |Tlabel| mathdef:: \xref{text/instructions}{text-label}{\T{label}}
.. |Tinstr| mathdef:: \xref{text/instructions}{text-instr}{\T{instr}}
.. |Tplaininstr| mathdef:: \xref{text/instructions}{text-plaininstr}{\T{plaininstr}}
.. |Tblockinstr| mathdef:: \xref{text/instructions}{text-blockinstr}{\T{blockinstr}}
.. |Tfoldedinstr| mathdef:: \xref{text/instructions}{text-foldedinstr}{\T{foldedinstr}}
.. |Texpr| mathdef:: \xref{text/instructions}{text-expr}{\T{expr}}


.. Context, textual

.. |TYPEDEFS| mathdef:: \K{typedefs}


.. Contexts, meta functions

.. |idfresh| mathdef:: ~\xref{text/values}{text-id-fresh}{\mbox{fresh}}
.. |idcwellformed| mathdef:: ~\xref{text/conventions}{text-context-wf}{\mbox{well-formed}}


.. Runtime, terminals

.. |MUT| mathdef:: \K{mut}
.. |HOST| mathdef:: \K{host}


.. Runtime, non-terminals

.. |val| mathdef:: \xref{execution/runtime}{syntax-val}{\X{val}}

.. |addr| mathdef:: \xref{execution/runtime}{syntax-addr}{\X{addr}}
.. |funcaddr| mathdef:: \xref{execution/runtime}{syntax-funcaddr}{\X{funcaddr}}
.. |tableaddr| mathdef:: \xref{execution/runtime}{syntax-tableaddr}{\X{tableaddr}}
.. |memaddr| mathdef:: \xref{execution/runtime}{syntax-memaddr}{\X{memaddr}}
.. |globaladdr| mathdef:: \xref{execution/runtime}{syntax-globaladdr}{\X{globaladdr}}

.. |moduleinst| mathdef:: \xref{execution/runtime}{syntax-moduleinst}{\X{moduleinst}}
.. |funcinst| mathdef:: \xref{execution/runtime}{syntax-funcinst}{\X{funcinst}}
.. |tableinst| mathdef:: \xref{execution/runtime}{syntax-tableinst}{\X{tableinst}}
.. |funcelem| mathdef:: \xref{execution/runtime}{syntax-funcelem}{\X{funcelem}}
.. |meminst| mathdef:: \xref{execution/runtime}{syntax-meminst}{\X{meminst}}
.. |globalinst| mathdef:: \xref{execution/runtime}{syntax-globalinst}{\X{globalinst}}
.. |exportinst| mathdef:: \xref{execution/runtime}{syntax-exportinst}{\X{exportinst}}
.. |hostfunc| mathdef:: \xref{execution/runtime}{syntax-hostfunc}{\X{hostfunc}}

.. |externval| mathdef:: \xref{execution/runtime}{syntax-externval}{\X{externval}}
.. |externtype| mathdef:: \xref{execution/runtime}{syntax-externtype}{\X{externtype}}
.. |storagetype| mathdef:: \xref{execution/runtime}{syntax-storagetype}{\X{storagetype}}

.. |store| mathdef:: \xref{execution/runtime}{syntax-store}{\X{store}}
.. |frame| mathdef:: \xref{execution/runtime}{syntax-frame}{\X{frame}}
.. |label| mathdef:: \xref{execution/runtime}{syntax-label}{\X{label}}

.. |XB| mathdef:: \xref{execution/runtime}{syntax-ctxt-block}{B}

.. |moduleinstr| mathdef:: \xref{execution/runtime}{syntax-moduleinstr}{\X{moduleinstr}}


.. Execution, notation

.. |stepto| mathdef:: \hookrightarrow
.. |mod| mathdef:: \mathbin{\F{mod}}

.. |allocfunc| mathdef:: \xref{execution/modules}{alloc-func}{\F{allocfunc}}
.. |allochostfunc| mathdef:: \xref{execution/modules}{alloc-hostfunc}{\F{allochostfunc}}
.. |alloctable| mathdef:: \xref{execution/modules}{alloc-table}{\F{alloctable}}
.. |allocmem| mathdef:: \xref{execution/modules}{alloc-mem}{\F{allocmem}}
.. |allocglobal| mathdef:: \xref{execution/modules}{alloc-global}{\F{allocglobal}}
.. |allocmodule| mathdef:: \xref{execution/modules}{alloc-module}{\F{allocmodule}}


.. Numerics, meta functions

.. |bits| mathdef:: \xref{execution/numerics}{aux-bits}{\F{bits}}
.. |ibits| mathdef:: \xref{execution/numerics}{aux-ibits}{\F{ibits}}
.. |fbits| mathdef:: \xref{execution/numerics}{aux-fbits}{\F{fbits}}
.. |fsign| mathdef:: \xref{execution/numerics}{aux-fsign}{\F{fsign}}
.. |fbias| mathdef:: \xref{execution/numerics}{aux-fbias}{\F{fbias}}
.. |bytes| mathdef:: \xref{execution/numerics}{aux-bytes}{\F{bytes}}
.. |littleendian| mathdef:: \xref{execution/numerics}{aux-littleendian}{\F{littleendian}}
.. |signed| mathdef:: \xref{execution/numerics}{aux-signed}{\F{signed}}
.. |bool| mathdef:: \xref{execution/numerics}{aux-bool}{\F{bool}}

.. |ieee| mathdef:: \xref{execution/numerics}{aux-ieee}{\F{float}}
.. |nans| mathdef:: \xref{execution/numerics}{aux-nans}{\F{nans}}
.. |canon| mathdef:: \xref{syntax/values}{aux-canon}{\F{canon}}

.. |significand| mathdef:: \xref{syntax/values}{aux-significand}{\F{signif}}
.. |exponent| mathdef:: \xref{syntax/values}{aux-exponent}{\F{expon}}


.. Numerics, operators

.. |iadd| mathdef:: \xref{execution/numerics}{op-iadd}{\F{iadd}}
.. |isub| mathdef:: \xref{execution/numerics}{op-isub}{\F{isub}}
.. |imul| mathdef:: \xref{execution/numerics}{op-imul}{\F{imul}}
.. |idivu| mathdef:: \xref{execution/numerics}{op-idiv_u}{\F{idiv\_u}}
.. |idivs| mathdef:: \xref{execution/numerics}{op-idiv_s}{\F{idiv\_s}}
.. |iremu| mathdef:: \xref{execution/numerics}{op-irem_u}{\F{irem\_u}}
.. |irems| mathdef:: \xref{execution/numerics}{op-irem_s}{\F{irem\_s}}
.. |iand| mathdef:: \xref{execution/numerics}{op-iand}{\F{iand}}
.. |ior| mathdef:: \xref{execution/numerics}{op-ior}{\F{ior}}
.. |ixor| mathdef:: \xref{execution/numerics}{op-ixor}{\F{ixor}}
.. |ishl| mathdef:: \xref{execution/numerics}{op-ishl}{\F{ishl}}
.. |ishru| mathdef:: \xref{execution/numerics}{op-ishr_u}{\F{ishr\_u}}
.. |ishrs| mathdef:: \xref{execution/numerics}{op-ishr_s}{\F{ishr\_s}}
.. |irotl| mathdef:: \xref{execution/numerics}{op-irotl}{\F{irotl}}
.. |irotr| mathdef:: \xref{execution/numerics}{op-irotr}{\F{irotr}}
.. |iclz| mathdef:: \xref{execution/numerics}{op-iclz}{\F{iclz}}
.. |ictz| mathdef:: \xref{execution/numerics}{op-ictz}{\F{ictz}}
.. |ipopcnt| mathdef:: \xref{execution/numerics}{op-ipopcnt}{\F{ipopcnt}}
.. |ieqz| mathdef:: \xref{execution/numerics}{op-ieqz}{\F{ieqz}}
.. |ieq| mathdef:: \xref{execution/numerics}{op-ieq}{\F{ieq}}
.. |ine| mathdef:: \xref{execution/numerics}{op-ine}{\F{ine}}
.. |iltu| mathdef:: \xref{execution/numerics}{op-ilt_u}{\F{ilt\_u}}
.. |ilts| mathdef:: \xref{execution/numerics}{op-ilt_s}{\F{ilt\_s}}
.. |igtu| mathdef:: \xref{execution/numerics}{op-igt_u}{\F{igt\_u}}
.. |igts| mathdef:: \xref{execution/numerics}{op-igt_s}{\F{igt\_s}}
.. |ileu| mathdef:: \xref{execution/numerics}{op-ile_u}{\F{ile\_u}}
.. |iles| mathdef:: \xref{execution/numerics}{op-ile_s}{\F{ile\_s}}
.. |igeu| mathdef:: \xref{execution/numerics}{op-ige_u}{\F{ige\_u}}
.. |iges| mathdef:: \xref{execution/numerics}{op-ige_s}{\F{ige\_s}}

.. |fadd| mathdef:: \xref{execution/numerics}{op-fadd}{\F{fadd}}
.. |fsub| mathdef:: \xref{execution/numerics}{op-fsub}{\F{fsub}}
.. |fmul| mathdef:: \xref{execution/numerics}{op-fmul}{\F{fmul}}
.. |fdiv| mathdef:: \xref{execution/numerics}{op-fdiv}{\F{fdiv}}
.. |fmin| mathdef:: \xref{execution/numerics}{op-fmin}{\F{fmin}}
.. |fmax| mathdef:: \xref{execution/numerics}{op-fmax}{\F{fmax}}
.. |fcopysign| mathdef:: \xref{execution/numerics}{op-fcopysign}{\F{fcopysign}}
.. |fabs| mathdef:: \xref{execution/numerics}{op-fabs}{\F{fabs}}
.. |fneg| mathdef:: \xref{execution/numerics}{op-fneg}{\F{fneg}}
.. |fsqrt| mathdef:: \xref{execution/numerics}{op-fsqrt}{\F{fsqrt}}
.. |fceil| mathdef:: \xref{execution/numerics}{op-fceil}{\F{fceil}}
.. |ffloor| mathdef:: \xref{execution/numerics}{op-ffloor}{\F{ffloor}}
.. |ftrunc| mathdef:: \xref{execution/numerics}{op-ftrunc}{\F{ftrunc}}
.. |fnearest| mathdef:: \xref{execution/numerics}{op-fnearest}{\F{fnearest}}
.. |feq| mathdef:: \xref{execution/numerics}{op-feq}{\F{feq}}
.. |fne| mathdef:: \xref{execution/numerics}{op-fne}{\F{fne}}
.. |flt| mathdef:: \xref{execution/numerics}{op-flt}{\F{flt}}
.. |fgt| mathdef:: \xref{execution/numerics}{op-fgt}{\F{fgt}}
.. |fle| mathdef:: \xref{execution/numerics}{op-fle}{\F{fle}}
.. |fge| mathdef:: \xref{execution/numerics}{op-fge}{\F{fge}}

.. |extend| mathdef:: \xref{execution/numerics}{op-extend_u}{\F{extend}}
.. |extendu| mathdef:: \xref{execution/numerics}{op-extend_u}{\F{extend\_u}}
.. |extends| mathdef:: \xref{execution/numerics}{op-extend_s}{\F{extend\_s}}
.. |wrap| mathdef:: \xref{execution/numerics}{op-wrap}{\F{wrap}}
.. |truncu| mathdef:: \xref{execution/numerics}{op-trunc_u}{\F{trunc\_u}}
.. |truncs| mathdef:: \xref{execution/numerics}{op-trunc_s}{\F{trunc\_s}}
.. |promote| mathdef:: \xref{execution/numerics}{op-promote}{\F{promote}}
.. |demote| mathdef:: \xref{execution/numerics}{op-demote}{\F{demote}}
.. |convertu| mathdef:: \xref{execution/numerics}{op-convert_u}{\F{convert\_u}}
.. |converts| mathdef:: \xref{execution/numerics}{op-convert_s}{\F{convert\_s}}
.. |reinterpret| mathdef:: \xref{execution/numerics}{op-reinterpret}{\F{reinterpret}}

.. |trunc| mathdef:: \xref{execution/numerics}{aux-trunc}{\F{trunc}}
